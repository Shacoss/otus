{
	"info": {
		"_postman_id": "cc370ff7-f147-4fa2-a274-54d0c1f1cdf0",
		"name": "Otus",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "10872279"
	},
	"item": [
		{
			"name": "register user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"user_1_login\", \"user_\" + Date.now() + \"@gmail.com\")",
							"pm.environment.set(\"user_1_password\", Date.now())"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"{{user_1_login}}\",\n    \"name\": \"name1\",\n    \"password\": \"{{user_1_password}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/auth/register",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "login user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.environment.set(\"user_1_token\", pm.response.json().token)",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"auth": {
					"type": "basic",
					"basic": [
						{
							"key": "password",
							"value": "{{user_1_password}}",
							"type": "string"
						},
						{
							"key": "username",
							"value": "{{user_1_login}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/auth/login",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"auth",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "get billing",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Billing account is 0\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.account).to.eql(0);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_1_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/billing",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"billing"
					]
				}
			},
			"response": []
		},
		{
			"name": "add money",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"add_billing_money\", 100)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_1_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"account\": {{add_billing_money}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/billing/add",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"billing",
						"add"
					]
				}
			},
			"response": []
		},
		{
			"name": "check money",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"billing account has been credited\", function () {",
							"    var addSum = pm.environment.get(\"add_billing_money\");",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.account).to.eql(addSum);",
							"",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_1_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/billing",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"billing"
					]
				}
			},
			"response": []
		},
		{
			"name": "order within the available funds",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202\", function () {",
							"    pm.response.to.have.status(202);",
							"    pm.environment.set(\"order1_id\", pm.response.headers.get(\"X-Orderid\"))",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"order1_price\", 90)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_1_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"price\": {{order1_price}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/order",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "check money after order 1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"The amount of funds has decreased\", function () {",
							"    var beforeMoney = pm.environment.get(\"add_billing_money\");",
							"    var orderPrice = pm.environment.get(\"order1_price\");",
							"    pm.environment.set(\"account_after_order1\", pm.response.json().account);",
							"    pm.expect(pm.response.json().account).to.eql(beforeMoney-orderPrice);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_1_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/billing",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"billing"
					]
				}
			},
			"response": []
		},
		{
			"name": "order 1 notification",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Order status SUCCESS\", function () {",
							"    pm.expect(pm.response.json().status).to.eql(\"SUCCESS\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_1_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/notification/{{order1_id}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"notification",
						"{{order1_id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "order that exceeds the available funds",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 202\", function () {",
							"    pm.response.to.have.status(202);",
							"    pm.environment.set(\"order2_id\", pm.response.headers.get(\"X-Orderid\"))",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.environment.set(\"order2_price\", 100)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_1_token}}",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"price\": {{order2_price}}\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://{{baseUrl}}/order",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"order"
					]
				}
			},
			"response": []
		},
		{
			"name": "check money after order 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"The amount of funds has not changed\", function () {",
							"    var accountBeforeOrder2 = pm.environment.get(\"account_after_order1\");",
							"    pm.expect(pm.response.json().account).to.eql(accountBeforeOrder2);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_1_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/billing",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"billing"
					]
				}
			},
			"response": []
		},
		{
			"name": "order 2 notification",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"Order status FAILED\", function () {",
							"    pm.expect(pm.response.json().status).to.eql(\"FAILED\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{user_1_token}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://{{baseUrl}}/notification/{{order2_id}}",
					"protocol": "http",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"notification",
						"{{order2_id}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "arch.homework",
			"type": "string"
		}
	]
}