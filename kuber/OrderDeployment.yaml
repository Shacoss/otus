apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-service
  namespace: otus-hw9
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: order-service
  template:
    metadata:
      labels:
        app: order-service
    spec:
      automountServiceAccountToken: false
      initContainers:
        - name: wait-for-rabbitmq
          image: busybox:1.28
          command:
            - "sh"
            - "-c"
            - "until nc -z rabbitmq 5672; do echo 'Waiting for RabbitMQ...'; sleep 5; done"
        - name: wait-for-redis
          image: busybox:1.28
          command:
            - "sh"
            - "-c"
            - "until nc -z redis-master 6379; do echo 'Waiting for Redis...'; sleep 5; done"
        - name: wait-for-postgres
          image: busybox:1.28
          command:
            - "sh"
            - "-c"
            - "until nc -z postgres-postgresql 5432; do echo 'Waiting for PostgreSQL...'; sleep 5; done"
      containers:
        - name: order
          image: shacoss/order-service:latest
          resources:
            requests:
              memory: "64Mi"
              cpu: "250m"
            limits:
              memory: "128Mi"
              cpu: "500m"
          ports:
            - containerPort: 8080
              name: order-port
          envFrom:
            - configMapRef:
                name: db-settings
            - configMapRef:
                name: rabbitmq-settings
            - configMapRef:
                name: redis-settings
            - secretRef:
                name: db-secret
            - secretRef:
                name: rabbitmq-secret
          env:
            - name: SERVER_PORT
              value: ":8080"
            - name: PRODUCT_URL
              value: "http://warehouse-service-sv.otus-hw9.svc.cluster.local"